fro[ line 4/130 (3%), col 1/30 (3%), char 57/2836 (2%) ]
from datetime import datetime
import os

# Declare ADXL345 class from adxl345 library
myADXL = i2c_adxl345.i2c_adxl345(1)

# Interval controls how often we retrieve axes (seconds)
interval = 0.1

# Declare counters and counter_error
counter = 0
counter_error = 0
maxCounterToWrite = 36000
displayLoop = True
display = True

# Declare list to store data from accelerometer
dataList = []

def strConvertAxes (x,y,z):
	return (str(x),str(y),str(z))

	
def printAxes (x,y,z):
	(x,y,z) = strConvertAxes(x,y,z)

	print("\n\n[ADXL345]")
	print("X: " + x + "g")
	print("Y: " + y + "g")
	print("Z: " + z + "g")

def trackCounter():
	global counter
	global counter_error

	counter += 1

	print("COUNT: " + str(counter))
	print("LOST COUNTS: " + str(counter_error))

def addToList(dataList, x, y, z, time):
	(x,y,z) = strConvertAxes(x,y,z)
	dataList.append(x)
	dataList.append(y)
	dataList.append(z)
	dataList.append(time)
	# ";" denotes end of sample
	dataList.append(";")
	return dataList

	
def writeToDisk(dataList, interval):
	# n is a counter for dataList
	n = 0
	
	global counter
	
	mainDataFile = open('ADXLData/main_file', 'w')
	mainDataFile.write("ADXL345 Data File\nSample Rate: " + str(interval) + "\nSamples: " + str(counter) + "\n\n[START]\n")
	
	for item in dataList:
		n += 1
		if item != ";":
			mainDataFile.write(item)
			if n < 4:
				mainDataFile.write(" ")
		elif item == ";":
			mainDataFile.write("\n")
			n = 0
	
	mainDataFile.write("[END]")
	mainDataFile.close()
			

#addToList(accel_x, accel_y, accel_z, str(datetime.now()))
	
def mainDisplayADXL (interval, write, display, dataList):
	# Interval is in seconds, and controls how often we read and print from ADXL
	# Use "try/except" to prevent IOError from interrupting display loop
	# We will increment an error counter to track loss
	global counter
	global displayLoop
	
	try:
		os.system("clear")
		trackCounter()
		(accel_x, accel_y, accel_z) = myADXL.getAxes()
		if display:
			printAxes(accel_x,accel_y,accel_z)
			print(str(datetime.now()))
			print("\nRetrieving every " + str(interval) + " seconds")
			
		if write:
			dataList = addToList(dataList, accel_x, accel_y, accel_z, str(datetime.now()))
			if counter >= maxCounterToWrite:
				writeToDisk(dataList, interval)
				# interrupt main loop
				displayLoop = False
				print ("### WROTE TO FILE ###")
			
	except IOError:
		print ("IOERROR thrown")
		global counter_error
		counter_error += 1

	sleep(interval)
	



	
###################################

interval = float(input("\nEnter interval: "))
maxCounterToWrite = float(input("\nEnter maxCounter: "))
display = float(input("\nDisplay? (0, 1): "))

if display == 0:
	display = False
else:
	display = True

## MAIN LOOP 

while displayLoop:
	mainDisplayADXL(interval, True, display, dataList)
